# frozen_string_literal: true

# Code generated by protoc-gen-protobug. DO NOT EDIT.

# source: in_toto_attestation/predicates/scai/v0/scai.proto
# syntax: proto3
# package: in_toto_attestation.predicates.scai.v0
# options:
#   java_package: "io.github.intoto.attestation.predicates.scai.v0"
#   go_package: "github.com/in-toto/attestation/go/predicates/scai/v0"

# Protobuf definition for the SCAI Attribute Report predicate
# (predicateType = https://in-toto.io/attestation/scai/attribute-report/v0.2)
#
# Validation of all fields is left to the users of this proto.

require "protobug"

require "google/protobuf/struct_pb"

require_relative "../../../v1/resource_descriptor_pb"

module InTotoAttestation
  module Predicates
    module Scai
      module V0
        class AttributeAssertion
          extend Protobug::Message

          self.full_name = "in_toto_attestation.predicates.scai.v0.AttributeAssertion"

          optional(
            1,
            "attribute",
            type: :string,
            proto3_optional: false
          ) # required
          optional(
            2,
            "target",
            type: :message,
            message_type: "in_toto_attestation.v1.ResourceDescriptor",
            proto3_optional: false
          )
          optional(
            3,
            "conditions",
            type: :message,
            message_type: "google.protobuf.Struct",
            proto3_optional: false
          )
          optional(
            4,
            "evidence",
            type: :message,
            message_type: "in_toto_attestation.v1.ResourceDescriptor",
            proto3_optional: false
          )
        end

        class AttributeReport
          extend Protobug::Message

          self.full_name = "in_toto_attestation.predicates.scai.v0.AttributeReport"

          repeated(
            1,
            "attributes",
            type: :message,
            message_type:
            "in_toto_attestation.predicates.scai.v0.AttributeAssertion"
          )
          optional(
            2,
            "producer",
            type: :message,
            message_type: "in_toto_attestation.v1.ResourceDescriptor",
            proto3_optional: false
          )
        end

        def self.register_scai_protos(registry)
          Google::Protobuf.register_struct_protos(registry)
          InTotoAttestation::V1.register_resource_descriptor_protos(registry)
          registry.register(
            InTotoAttestation::Predicates::Scai::V0::AttributeAssertion
          )
          registry.register(
            InTotoAttestation::Predicates::Scai::V0::AttributeReport
          )
        end
      end
    end
  end
end
