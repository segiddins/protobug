# frozen_string_literal: true

# Code generated by protoc-gen-protobug. DO NOT EDIT.

# source: protoc-gen-openapiv2/options/openapiv2.proto
# syntax: proto3
# package: grpc.gateway.protoc_gen_openapiv2.options
# options:
#   go_package: "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"

require "protobug"

require "google/protobuf/struct_pb"

module Grpc
  module Gateway
    module ProtocGenOpenapiv2
      module Options
        # Scheme describes the schemes supported by the OpenAPI Swagger
        # and Operation objects.
        class Scheme
          extend Protobug::Enum

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.Scheme"

          UNKNOWN = new("UNKNOWN", 0).freeze
          HTTP = new("HTTP", 1).freeze
          HTTPS = new("HTTPS", 2).freeze
          WS = new("WS", 3).freeze
          WSS = new("WSS", 4).freeze
        end

        # `Swagger` is a representation of OpenAPI v2 specification's Swagger object.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#swaggerObject
        #
        # Example:
        #
        #  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
        #    info: {
        #      title: "Echo API";
        #      version: "1.0";
        #      description: "";
        #      contact: {
        #        name: "gRPC-Gateway project";
        #        url: "https://github.com/grpc-ecosystem/grpc-gateway";
        #        email: "none@example.com";
        #      };
        #      license: {
        #        name: "BSD 3-Clause License";
        #        url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE";
        #      };
        #    };
        #    schemes: HTTPS;
        #    consumes: "application/json";
        #    produces: "application/json";
        #  };
        class Swagger
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.Swagger"

          # Specifies the OpenAPI Specification version being used. It can be
          # used by the OpenAPI UI and other clients to interpret the API listing. The
          # value MUST be "2.0".
          optional(1, "swagger", type: :string, proto3_optional: false)
          # Provides metadata about the API. The metadata can be used by the
          # clients if needed.
          optional(
            2,
            "info",
            type: :message,
            message_type: "grpc.gateway.protoc_gen_openapiv2.options.Info",
            proto3_optional: false
          )
          # The host (name or ip) serving the API. This MUST be the host only and does
          # not include the scheme nor sub-paths. It MAY include a port. If the host is
          # not included, the host serving the documentation is to be used (including
          # the port). The host does not support path templating.
          optional(3, "host", type: :string, proto3_optional: false)
          # The base path on which the API is served, which is relative to the host. If
          # it is not included, the API is served directly under the host. The value
          # MUST start with a leading slash (/). The basePath does not support path
          # templating.
          # Note that using `base_path` does not change the endpoint paths that are
          # generated in the resulting OpenAPI file. If you wish to use `base_path`
          # with relatively generated OpenAPI paths, the `base_path` prefix must be
          # manually removed from your `google.api.http` paths and your code changed to
          # serve the API from the `base_path`.
          optional(
            4,
            "base_path",
            type: :string,
            json_name: "basePath",
            proto3_optional: false
          )
          # The transfer protocol of the API. Values MUST be from the list: "http",
          # "https", "ws", "wss". If the schemes is not included, the default scheme to
          # be used is the one used to access the OpenAPI definition itself.
          repeated(
            5,
            "schemes",
            type: :enum,
            enum_type: "grpc.gateway.protoc_gen_openapiv2.options.Scheme",
            packed: true
          )
          # A list of MIME types the APIs can consume. This is global to all APIs but
          # can be overridden on specific API calls. Value MUST be as described under
          # Mime Types.
          repeated(6, "consumes", type: :string)
          # A list of MIME types the APIs can produce. This is global to all APIs but
          # can be overridden on specific API calls. Value MUST be as described under
          # Mime Types.
          repeated(7, "produces", type: :string)
          # An object to hold responses that can be used across operations. This
          # property does not define global responses for all operations.
          map(
            10,
            "responses",
            key_type: :string,
            value_type: :message,
            message_type: "grpc.gateway.protoc_gen_openapiv2.options.Response"
          )
          # Security scheme definitions that can be used across the specification.
          optional(
            11,
            "security_definitions",
            type: :message,
            message_type:
            "grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions",
            json_name: "securityDefinitions",
            proto3_optional: false
          )
          # A declaration of which security schemes are applied for the API as a whole.
          # The list of values describes alternative security schemes that can be used
          # (that is, there is a logical OR between the security requirements).
          # Individual operations can override this definition.
          repeated(
            12,
            "security",
            type: :message,
            message_type:
            "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement"
          )
          # A list of tags for API documentation control. Tags can be used for logical
          # grouping of operations by resources or any other qualifier.
          repeated(
            13,
            "tags",
            type: :message,
            message_type: "grpc.gateway.protoc_gen_openapiv2.options.Tag"
          )
          # Additional external documentation.
          optional(
            14,
            "external_docs",
            type: :message,
            message_type:
            "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation",
            json_name: "externalDocs",
            proto3_optional: false
          )
          # Custom properties that start with "x-" such as "x-foo" used to describe
          # extra functionality that is not covered by the standard OpenAPI Specification.
          # See: https://swagger.io/docs/specification/2-0/swagger-extensions/
          map(
            15,
            "extensions",
            key_type: :string,
            value_type: :message,
            message_type: "google.protobuf.Value"
          )

          # field 8 is reserved for 'paths'.
          reserved_range(8...9)
          reserved_range(9...10)
        end

        # `Operation` is a representation of OpenAPI v2 specification's Operation object.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#operationObject
        #
        # Example:
        #
        #  service EchoService {
        #    rpc Echo(SimpleMessage) returns (SimpleMessage) {
        #      option (google.api.http) = {
        #        get: "/v1/example/echo/{id}"
        #      };
        #
        #      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        #        summary: "Get a message.";
        #        operation_id: "getMessage";
        #        tags: "echo";
        #        responses: {
        #          key: "200"
        #            value: {
        #            description: "OK";
        #          }
        #        }
        #      };
        #    }
        #  }
        class Operation
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.Operation"

          # A list of tags for API documentation control. Tags can be used for logical
          # grouping of operations by resources or any other qualifier.
          repeated(1, "tags", type: :string)
          # A short summary of what the operation does. For maximum readability in the
          # swagger-ui, this field SHOULD be less than 120 characters.
          optional(2, "summary", type: :string, proto3_optional: false)
          # A verbose explanation of the operation behavior. GFM syntax can be used for
          # rich text representation.
          optional(3, "description", type: :string, proto3_optional: false)
          # Additional external documentation for this operation.
          optional(
            4,
            "external_docs",
            type: :message,
            message_type:
            "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation",
            json_name: "externalDocs",
            proto3_optional: false
          )
          # Unique string used to identify the operation. The id MUST be unique among
          # all operations described in the API. Tools and libraries MAY use the
          # operationId to uniquely identify an operation, therefore, it is recommended
          # to follow common programming naming conventions.
          optional(
            5,
            "operation_id",
            type: :string,
            json_name: "operationId",
            proto3_optional: false
          )
          # A list of MIME types the operation can consume. This overrides the consumes
          # definition at the OpenAPI Object. An empty value MAY be used to clear the
          # global definition. Value MUST be as described under Mime Types.
          repeated(6, "consumes", type: :string)
          # A list of MIME types the operation can produce. This overrides the produces
          # definition at the OpenAPI Object. An empty value MAY be used to clear the
          # global definition. Value MUST be as described under Mime Types.
          repeated(7, "produces", type: :string)
          # The list of possible responses as they are returned from executing this
          # operation.
          map(
            9,
            "responses",
            key_type: :string,
            value_type: :message,
            message_type: "grpc.gateway.protoc_gen_openapiv2.options.Response"
          )
          # The transfer protocol for the operation. Values MUST be from the list:
          # "http", "https", "ws", "wss". The value overrides the OpenAPI Object
          # schemes definition.
          repeated(
            10,
            "schemes",
            type: :enum,
            enum_type: "grpc.gateway.protoc_gen_openapiv2.options.Scheme",
            packed: true
          )
          # Declares this operation to be deprecated. Usage of the declared operation
          # should be refrained. Default value is false.
          optional(11, "deprecated", type: :bool, proto3_optional: false)
          # A declaration of which security schemes are applied for this operation. The
          # list of values describes alternative security schemes that can be used
          # (that is, there is a logical OR between the security requirements). This
          # definition overrides any declared top-level security. To remove a top-level
          # security declaration, an empty array can be used.
          repeated(
            12,
            "security",
            type: :message,
            message_type:
            "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement"
          )
          # Custom properties that start with "x-" such as "x-foo" used to describe
          # extra functionality that is not covered by the standard OpenAPI Specification.
          # See: https://swagger.io/docs/specification/2-0/swagger-extensions/
          map(
            13,
            "extensions",
            key_type: :string,
            value_type: :message,
            message_type: "google.protobuf.Value"
          )
          # Custom parameters such as HTTP request headers.
          # See: https://swagger.io/docs/specification/2-0/describing-parameters/
          # and https://swagger.io/specification/v2/#parameter-object.
          optional(
            14,
            "parameters",
            type: :message,
            message_type:
            "grpc.gateway.protoc_gen_openapiv2.options.Parameters",
            proto3_optional: false
          )

          # field 8 is reserved for 'parameters'.
          reserved_range(8...9)
        end

        # `Parameters` is a representation of OpenAPI v2 specification's parameters object.
        # Note: This technically breaks compatibility with the OpenAPI 2 definition structure as we only
        # allow header parameters to be set here since we do not want users specifying custom non-header
        # parameters beyond those inferred from the Protobuf schema.
        # See: https://swagger.io/specification/v2/#parameter-object
        class Parameters
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.Parameters"

          # `Headers` is one or more HTTP header parameter.
          # See: https://swagger.io/docs/specification/2-0/describing-parameters/#header-parameters
          repeated(
            1,
            "headers",
            type: :message,
            message_type:
            "grpc.gateway.protoc_gen_openapiv2.options.HeaderParameter"
          )
        end

        # `HeaderParameter` a HTTP header parameter.
        # See: https://swagger.io/specification/v2/#parameter-object
        class HeaderParameter
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.HeaderParameter"

          # `Type` is a supported HTTP header type.
          # See https://swagger.io/specification/v2/#parameterType.
          class Type
            extend Protobug::Enum

            self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.HeaderParameter.Type"

            UNKNOWN = new("UNKNOWN", 0).freeze
            STRING = new("STRING", 1).freeze
            NUMBER = new("NUMBER", 2).freeze
            INTEGER = new("INTEGER", 3).freeze
            BOOLEAN = new("BOOLEAN", 4).freeze
          end

          # `Name` is the header name.
          optional(1, "name", type: :string, proto3_optional: false)
          # `Description` is a short description of the header.
          optional(2, "description", type: :string, proto3_optional: false)
          # `Type` is the type of the object. The value MUST be one of "string", "number", "integer", or "boolean". The "array" type is not supported.
          # See: https://swagger.io/specification/v2/#parameterType.
          optional(
            3,
            "type",
            type: :enum,
            enum_type:
            "grpc.gateway.protoc_gen_openapiv2.options.HeaderParameter.Type",
            proto3_optional: false
          )
          # `Format` The extending format for the previously mentioned type.
          optional(4, "format", type: :string, proto3_optional: false)
          # `Required` indicates if the header is optional
          optional(5, "required", type: :bool, proto3_optional: false)

          # field 6 is reserved for 'items', but in OpenAPI-specific way.
          reserved_range(6...7)
          reserved_range(7...8)
        end

        # `Header` is a representation of OpenAPI v2 specification's Header object.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#headerObject
        class Header
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.Header"

          # `Description` is a short description of the header.
          optional(1, "description", type: :string, proto3_optional: false)
          # The type of the object. The value MUST be one of "string", "number", "integer", or "boolean". The "array" type is not supported.
          optional(2, "type", type: :string, proto3_optional: false)
          # `Format` The extending format for the previously mentioned type.
          optional(3, "format", type: :string, proto3_optional: false)
          # `Default` Declares the value of the header that the server will use if none is provided.
          # See: https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-6.2.
          # Unlike JSON Schema this value MUST conform to the defined type for the header.
          optional(6, "default", type: :string, proto3_optional: false)
          # 'Pattern' See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.3.
          optional(13, "pattern", type: :string, proto3_optional: false)

          # field 4 is reserved for 'items', but in OpenAPI-specific way.
          reserved_range(4...5)
          reserved_range(5...6)
          reserved_range(7...8)
          reserved_range(8...9)
          reserved_range(9...10)
          reserved_range(10...11)
          reserved_range(11...12)
          reserved_range(12...13)
          reserved_range(14...15)
          reserved_range(15...16)
          reserved_range(16...17)
          reserved_range(17...18)
          reserved_range(18...19)
        end

        # `Response` is a representation of OpenAPI v2 specification's Response object.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#responseObject
        class Response
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.Response"

          # `Description` is a short description of the response.
          # GFM syntax can be used for rich text representation.
          optional(1, "description", type: :string, proto3_optional: false)
          # `Schema` optionally defines the structure of the response.
          # If `Schema` is not provided, it means there is no content to the response.
          optional(
            2,
            "schema",
            type: :message,
            message_type: "grpc.gateway.protoc_gen_openapiv2.options.Schema",
            proto3_optional: false
          )
          # `Headers` A list of headers that are sent with the response.
          # `Header` name is expected to be a string in the canonical format of the MIME header key
          # See: https://golang.org/pkg/net/textproto/#CanonicalMIMEHeaderKey
          map(
            3,
            "headers",
            key_type: :string,
            value_type: :message,
            message_type: "grpc.gateway.protoc_gen_openapiv2.options.Header"
          )
          # `Examples` gives per-mimetype response examples.
          # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#example-object
          map(4, "examples", key_type: :string, value_type: :string)
          # Custom properties that start with "x-" such as "x-foo" used to describe
          # extra functionality that is not covered by the standard OpenAPI Specification.
          # See: https://swagger.io/docs/specification/2-0/swagger-extensions/
          map(
            5,
            "extensions",
            key_type: :string,
            value_type: :message,
            message_type: "google.protobuf.Value"
          )
        end

        # `Info` is a representation of OpenAPI v2 specification's Info object.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#infoObject
        #
        # Example:
        #
        #  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
        #    info: {
        #      title: "Echo API";
        #      version: "1.0";
        #      description: "";
        #      contact: {
        #        name: "gRPC-Gateway project";
        #        url: "https://github.com/grpc-ecosystem/grpc-gateway";
        #        email: "none@example.com";
        #      };
        #      license: {
        #        name: "BSD 3-Clause License";
        #        url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE";
        #      };
        #    };
        #    ...
        #  };
        class Info
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.Info"

          # The title of the application.
          optional(1, "title", type: :string, proto3_optional: false)
          # A short description of the application. GFM syntax can be used for rich
          # text representation.
          optional(2, "description", type: :string, proto3_optional: false)
          # The Terms of Service for the API.
          optional(
            3,
            "terms_of_service",
            type: :string,
            json_name: "termsOfService",
            proto3_optional: false
          )
          # The contact information for the exposed API.
          optional(
            4,
            "contact",
            type: :message,
            message_type: "grpc.gateway.protoc_gen_openapiv2.options.Contact",
            proto3_optional: false
          )
          # The license information for the exposed API.
          optional(
            5,
            "license",
            type: :message,
            message_type: "grpc.gateway.protoc_gen_openapiv2.options.License",
            proto3_optional: false
          )
          # Provides the version of the application API (not to be confused
          # with the specification version).
          optional(6, "version", type: :string, proto3_optional: false)
          # Custom properties that start with "x-" such as "x-foo" used to describe
          # extra functionality that is not covered by the standard OpenAPI Specification.
          # See: https://swagger.io/docs/specification/2-0/swagger-extensions/
          map(
            7,
            "extensions",
            key_type: :string,
            value_type: :message,
            message_type: "google.protobuf.Value"
          )
        end

        # `Contact` is a representation of OpenAPI v2 specification's Contact object.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#contactObject
        #
        # Example:
        #
        #  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
        #    info: {
        #      ...
        #      contact: {
        #        name: "gRPC-Gateway project";
        #        url: "https://github.com/grpc-ecosystem/grpc-gateway";
        #        email: "none@example.com";
        #      };
        #      ...
        #    };
        #    ...
        #  };
        class Contact
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.Contact"

          # The identifying name of the contact person/organization.
          optional(1, "name", type: :string, proto3_optional: false)
          # The URL pointing to the contact information. MUST be in the format of a
          # URL.
          optional(2, "url", type: :string, proto3_optional: false)
          # The email address of the contact person/organization. MUST be in the format
          # of an email address.
          optional(3, "email", type: :string, proto3_optional: false)
        end

        # `License` is a representation of OpenAPI v2 specification's License object.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#licenseObject
        #
        # Example:
        #
        #  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
        #    info: {
        #      ...
        #      license: {
        #        name: "BSD 3-Clause License";
        #        url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE";
        #      };
        #      ...
        #    };
        #    ...
        #  };
        class License
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.License"

          # The license name used for the API.
          optional(1, "name", type: :string, proto3_optional: false)
          # A URL to the license used for the API. MUST be in the format of a URL.
          optional(2, "url", type: :string, proto3_optional: false)
        end

        # `ExternalDocumentation` is a representation of OpenAPI v2 specification's
        # ExternalDocumentation object.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#externalDocumentationObject
        #
        # Example:
        #
        #  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
        #    ...
        #    external_docs: {
        #      description: "More about gRPC-Gateway";
        #      url: "https://github.com/grpc-ecosystem/grpc-gateway";
        #    }
        #    ...
        #  };
        class ExternalDocumentation
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation"

          # A short description of the target documentation. GFM syntax can be used for
          # rich text representation.
          optional(1, "description", type: :string, proto3_optional: false)
          # The URL for the target documentation. Value MUST be in the format
          # of a URL.
          optional(2, "url", type: :string, proto3_optional: false)
        end

        # `Schema` is a representation of OpenAPI v2 specification's Schema object.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject
        class Schema
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.Schema"

          optional(
            1,
            "json_schema",
            type: :message,
            message_type:
            "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema",
            json_name: "jsonSchema",
            proto3_optional: false
          )
          # Adds support for polymorphism. The discriminator is the schema property
          # name that is used to differentiate between other schema that inherit this
          # schema. The property name used MUST be defined at this schema and it MUST
          # be in the required property list. When used, the value MUST be the name of
          # this schema or any schema that inherits it.
          optional(2, "discriminator", type: :string, proto3_optional: false)
          # Relevant only for Schema "properties" definitions. Declares the property as
          # "read only". This means that it MAY be sent as part of a response but MUST
          # NOT be sent as part of the request. Properties marked as readOnly being
          # true SHOULD NOT be in the required list of the defined schema. Default
          # value is false.
          optional(
            3,
            "read_only",
            type: :bool,
            json_name: "readOnly",
            proto3_optional: false
          )
          # Additional external documentation for this schema.
          optional(
            5,
            "external_docs",
            type: :message,
            message_type:
            "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation",
            json_name: "externalDocs",
            proto3_optional: false
          )
          # A free-form property to include an example of an instance for this schema in JSON.
          # This is copied verbatim to the output.
          optional(6, "example", type: :string, proto3_optional: false)

          # field 4 is reserved for 'xml'.
          reserved_range(4...5)
        end

        # `JSONSchema` represents properties from JSON Schema taken, and as used, in
        # the OpenAPI v2 spec.
        #
        # This includes changes made by OpenAPI v2.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject
        #
        # See also: https://cswr.github.io/JsonSchema/spec/basic_types/,
        # https://github.com/json-schema-org/json-schema-spec/blob/master/schema.json
        #
        # Example:
        #
        #  message SimpleMessage {
        #    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        #      json_schema: {
        #        title: "SimpleMessage"
        #        description: "A simple message."
        #        required: ["id"]
        #      }
        #    };
        #
        #    // Id represents the message identifier.
        #    string id = 1; [
        #        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        #          description: "The unique identifier of the simple message."
        #        }];
        #  }
        class JSONSchema
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema"

          # Ref is used to define an external reference to include in the message.
          # This could be a fully qualified proto message reference, and that type must
          # be imported into the protofile. If no message is identified, the Ref will
          # be used verbatim in the output.
          # For example:
          #  `ref: ".google.protobuf.Timestamp"`.
          optional(3, "ref", type: :string, proto3_optional: false)
          # The title of the schema.
          optional(5, "title", type: :string, proto3_optional: false)
          # A short description of the schema.
          optional(6, "description", type: :string, proto3_optional: false)
          optional(7, "default", type: :string, proto3_optional: false)
          optional(
            8,
            "read_only",
            type: :bool,
            json_name: "readOnly",
            proto3_optional: false
          )
          # A free-form property to include a JSON example of this field. This is copied
          # verbatim to the output swagger.json. Quotes must be escaped.
          # This property is the same for 2.0 and 3.0.0 https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/3.0.0.md#schemaObject  https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject
          optional(9, "example", type: :string, proto3_optional: false)
          optional(
            10,
            "multiple_of",
            type: :double,
            json_name: "multipleOf",
            proto3_optional: false
          )
          # Maximum represents an inclusive upper limit for a numeric instance. The
          # value of MUST be a number,
          optional(11, "maximum", type: :double, proto3_optional: false)
          optional(
            12,
            "exclusive_maximum",
            type: :bool,
            json_name: "exclusiveMaximum",
            proto3_optional: false
          )
          # minimum represents an inclusive lower limit for a numeric instance. The
          # value of MUST be a number,
          optional(13, "minimum", type: :double, proto3_optional: false)
          optional(
            14,
            "exclusive_minimum",
            type: :bool,
            json_name: "exclusiveMinimum",
            proto3_optional: false
          )
          optional(
            15,
            "max_length",
            type: :uint64,
            json_name: "maxLength",
            proto3_optional: false
          )
          optional(
            16,
            "min_length",
            type: :uint64,
            json_name: "minLength",
            proto3_optional: false
          )
          optional(17, "pattern", type: :string, proto3_optional: false)
          optional(
            20,
            "max_items",
            type: :uint64,
            json_name: "maxItems",
            proto3_optional: false
          )
          optional(
            21,
            "min_items",
            type: :uint64,
            json_name: "minItems",
            proto3_optional: false
          )
          optional(
            22,
            "unique_items",
            type: :bool,
            json_name: "uniqueItems",
            proto3_optional: false
          )
          optional(
            24,
            "max_properties",
            type: :uint64,
            json_name: "maxProperties",
            proto3_optional: false
          )
          optional(
            25,
            "min_properties",
            type: :uint64,
            json_name: "minProperties",
            proto3_optional: false
          )
          repeated(26, "required", type: :string)
          # Items in 'array' must be unique.
          repeated(34, "array", type: :string)
          class JSONSchemaSimpleTypes
            extend Protobug::Enum

            self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.JSONSchemaSimpleTypes"

            UNKNOWN = new("UNKNOWN", 0).freeze
            ARRAY = new("ARRAY", 1).freeze
            BOOLEAN = new("BOOLEAN", 2).freeze
            INTEGER = new("INTEGER", 3).freeze
            NULL = new("NULL", 4).freeze
            NUMBER = new("NUMBER", 5).freeze
            OBJECT = new("OBJECT", 6).freeze
            STRING = new("STRING", 7).freeze
          end

          repeated(
            35,
            "type",
            type: :enum,
            enum_type:
            "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.JSONSchemaSimpleTypes",
            packed: true
          )
          # `Format`
          optional(36, "format", type: :string, proto3_optional: false)
          # Items in `enum` must be unique https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.5.1
          repeated(46, "enum", type: :string)
          # Additional field level properties used when generating the OpenAPI v2 file.
          optional(
            1_001,
            "field_configuration",
            type: :message,
            message_type:
            "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration",
            json_name: "fieldConfiguration",
            proto3_optional: false
          )
          # 'FieldConfiguration' provides additional field level properties used when generating the OpenAPI v2 file.
          # These properties are not defined by OpenAPIv2, but they are used to control the generation.
          class FieldConfiguration
            extend Protobug::Message

            self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.FieldConfiguration"

            # Alternative parameter name when used as path parameter. If set, this will
            # be used as the complete parameter name when this field is used as a path
            # parameter. Use this to avoid having auto generated path parameter names
            # for overlapping paths.
            optional(
              47,
              "path_param_name",
              type: :string,
              json_name: "pathParamName",
              proto3_optional: false
            )
          end

          # Custom properties that start with "x-" such as "x-foo" used to describe
          # extra functionality that is not covered by the standard OpenAPI Specification.
          # See: https://swagger.io/docs/specification/2-0/swagger-extensions/
          map(
            48,
            "extensions",
            key_type: :string,
            value_type: :message,
            message_type: "google.protobuf.Value"
          )

          # field 1 is reserved for '$id', omitted from OpenAPI v2.
          reserved_range(1...2)
          reserved_range(2...3)
          reserved_range(4...5)
          reserved_range(18...19)
          reserved_range(19...20)
          reserved_range(23...24)
          reserved_range(27...28)
          reserved_range(28...29)
          reserved_range(29...30)
          reserved_range(30...34)
          reserved_range(37...42)
          reserved_range(42...43)
          reserved_range(43...46)
        end

        # `Tag` is a representation of OpenAPI v2 specification's Tag object.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#tagObject
        class Tag
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.Tag"

          # The name of the tag. Use it to allow override of the name of a
          # global Tag object, then use that name to reference the tag throughout the
          # OpenAPI file.
          optional(1, "name", type: :string, proto3_optional: false)
          # A short description for the tag. GFM syntax can be used for rich text
          # representation.
          optional(2, "description", type: :string, proto3_optional: false)
          # Additional external documentation for this tag.
          optional(
            3,
            "external_docs",
            type: :message,
            message_type:
            "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation",
            json_name: "externalDocs",
            proto3_optional: false
          )
          # Custom properties that start with "x-" such as "x-foo" used to describe
          # extra functionality that is not covered by the standard OpenAPI Specification.
          # See: https://swagger.io/docs/specification/2-0/swagger-extensions/
          map(
            4,
            "extensions",
            key_type: :string,
            value_type: :message,
            message_type: "google.protobuf.Value"
          )
        end

        # `SecurityDefinitions` is a representation of OpenAPI v2 specification's
        # Security Definitions object.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securityDefinitionsObject
        #
        # A declaration of the security schemes available to be used in the
        # specification. This does not enforce the security schemes on the operations
        # and only serves to provide the relevant details for each scheme.
        class SecurityDefinitions
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions"

          # A single security scheme definition, mapping a "name" to the scheme it
          # defines.
          map(
            1,
            "security",
            key_type: :string,
            value_type: :message,
            message_type:
            "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme"
          )
        end

        # `SecurityScheme` is a representation of OpenAPI v2 specification's
        # Security Scheme object.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securitySchemeObject
        #
        # Allows the definition of a security scheme that can be used by the
        # operations. Supported schemes are basic authentication, an API key (either as
        # a header or as a query parameter) and OAuth2's common flows (implicit,
        # password, application and access code).
        class SecurityScheme
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme"

          # The type of the security scheme. Valid values are "basic",
          # "apiKey" or "oauth2".
          class Type
            extend Protobug::Enum

            self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Type"

            TYPE_INVALID = new("TYPE_INVALID", 0).freeze
            TYPE_BASIC = new("TYPE_BASIC", 1).freeze
            TYPE_API_KEY = new("TYPE_API_KEY", 2).freeze
            TYPE_OAUTH2 = new("TYPE_OAUTH2", 3).freeze
          end

          # The location of the API key. Valid values are "query" or "header".
          class In
            extend Protobug::Enum

            self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.In"

            IN_INVALID = new("IN_INVALID", 0).freeze
            IN_QUERY = new("IN_QUERY", 1).freeze
            IN_HEADER = new("IN_HEADER", 2).freeze
          end

          # The flow used by the OAuth2 security scheme. Valid values are
          # "implicit", "password", "application" or "accessCode".
          class Flow
            extend Protobug::Enum

            self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Flow"

            FLOW_INVALID = new("FLOW_INVALID", 0).freeze
            FLOW_IMPLICIT = new("FLOW_IMPLICIT", 1).freeze
            FLOW_PASSWORD = new("FLOW_PASSWORD", 2).freeze
            FLOW_APPLICATION = new("FLOW_APPLICATION", 3).freeze
            FLOW_ACCESS_CODE = new("FLOW_ACCESS_CODE", 4).freeze
          end

          # The type of the security scheme. Valid values are "basic",
          # "apiKey" or "oauth2".
          optional(
            1,
            "type",
            type: :enum,
            enum_type:
            "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Type",
            proto3_optional: false
          )
          # A short description for security scheme.
          optional(2, "description", type: :string, proto3_optional: false)
          # The name of the header or query parameter to be used.
          # Valid for apiKey.
          optional(3, "name", type: :string, proto3_optional: false)
          # The location of the API key. Valid values are "query" or
          # "header".
          # Valid for apiKey.
          optional(
            4,
            "in",
            type: :enum,
            enum_type:
            "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.In",
            proto3_optional: false
          )
          # The flow used by the OAuth2 security scheme. Valid values are
          # "implicit", "password", "application" or "accessCode".
          # Valid for oauth2.
          optional(
            5,
            "flow",
            type: :enum,
            enum_type:
            "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Flow",
            proto3_optional: false
          )
          # The authorization URL to be used for this flow. This SHOULD be in
          # the form of a URL.
          # Valid for oauth2/implicit and oauth2/accessCode.
          optional(
            6,
            "authorization_url",
            type: :string,
            json_name: "authorizationUrl",
            proto3_optional: false
          )
          # The token URL to be used for this flow. This SHOULD be in the
          # form of a URL.
          # Valid for oauth2/password, oauth2/application and oauth2/accessCode.
          optional(
            7,
            "token_url",
            type: :string,
            json_name: "tokenUrl",
            proto3_optional: false
          )
          # The available scopes for the OAuth2 security scheme.
          # Valid for oauth2.
          optional(
            8,
            "scopes",
            type: :message,
            message_type: "grpc.gateway.protoc_gen_openapiv2.options.Scopes",
            proto3_optional: false
          )
          # Custom properties that start with "x-" such as "x-foo" used to describe
          # extra functionality that is not covered by the standard OpenAPI Specification.
          # See: https://swagger.io/docs/specification/2-0/swagger-extensions/
          map(
            9,
            "extensions",
            key_type: :string,
            value_type: :message,
            message_type: "google.protobuf.Value"
          )
        end

        # `SecurityRequirement` is a representation of OpenAPI v2 specification's
        # Security Requirement object.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securityRequirementObject
        #
        # Lists the required security schemes to execute this operation. The object can
        # have multiple security schemes declared in it which are all required (that
        # is, there is a logical AND between the schemes).
        #
        # The name used for each property MUST correspond to a security scheme
        # declared in the Security Definitions.
        class SecurityRequirement
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement"

          # If the security scheme is of type "oauth2", then the value is a list of
          # scope names required for the execution. For other security scheme types,
          # the array MUST be empty.
          class SecurityRequirementValue
            extend Protobug::Message

            self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue"

            repeated(1, "scope", type: :string)
          end

          # Each name must correspond to a security scheme which is declared in
          # the Security Definitions. If the security scheme is of type "oauth2",
          # then the value is a list of scope names required for the execution.
          # For other security scheme types, the array MUST be empty.
          map(
            1,
            "security_requirement",
            key_type: :string,
            value_type: :message,
            message_type:
            "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue",
            json_name: "securityRequirement"
          )
        end

        # `Scopes` is a representation of OpenAPI v2 specification's Scopes object.
        #
        # See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#scopesObject
        #
        # Lists the available scopes for an OAuth2 security scheme.
        class Scopes
          extend Protobug::Message

          self.full_name = "grpc.gateway.protoc_gen_openapiv2.options.Scopes"

          # Maps between a name of a scope to a short description of it (as the value
          # of the property).
          map(1, "scope", key_type: :string, value_type: :string)
        end

        def self.register_openapiv2_protos(registry)
          Google::Protobuf.register_struct_protos(registry)
          registry.register(Grpc::Gateway::ProtocGenOpenapiv2::Options::Scheme)
          registry.register(Grpc::Gateway::ProtocGenOpenapiv2::Options::Swagger)
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::Operation
          )
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::Parameters
          )
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::HeaderParameter
          )
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::HeaderParameter::Type
          )
          registry.register(Grpc::Gateway::ProtocGenOpenapiv2::Options::Header)
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::Response
          )
          registry.register(Grpc::Gateway::ProtocGenOpenapiv2::Options::Info)
          registry.register(Grpc::Gateway::ProtocGenOpenapiv2::Options::Contact)
          registry.register(Grpc::Gateway::ProtocGenOpenapiv2::Options::License)
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::ExternalDocumentation
          )
          registry.register(Grpc::Gateway::ProtocGenOpenapiv2::Options::Schema)
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::JSONSchema
          )
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::JSONSchema::JSONSchemaSimpleTypes
          )
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::JSONSchema::FieldConfiguration
          )
          registry.register(Grpc::Gateway::ProtocGenOpenapiv2::Options::Tag)
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::SecurityDefinitions
          )
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::SecurityScheme
          )
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::SecurityScheme::Type
          )
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::SecurityScheme::In
          )
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::SecurityScheme::Flow
          )
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::SecurityRequirement
          )
          registry.register(
            Grpc::Gateway::ProtocGenOpenapiv2::Options::SecurityRequirement::SecurityRequirementValue
          )
          registry.register(Grpc::Gateway::ProtocGenOpenapiv2::Options::Scopes)
        end
      end
    end
  end
end
